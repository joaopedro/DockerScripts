<?xml version="1.0" encoding="UTF-8"?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:util="http://www.springframework.org/schema/util"
 		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
 							http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  		<property name="location" value="classpath:conf/ipdmsConfig.properties" />
 	</bean>

	<!-- Generate PDF Services -->
	
	<bean id="testKeyStoreFactory" class="com.sinfic.ipdms.utils.security.KeyStoreFactory">
		<constructor-arg>
			<bean id="keyStorePropertiesTest" class="com.sinfic.ipdms.utils.security.KeyStoreProperties">
				<property name="type" value="${licensing.ks.type}" />
				<property name="provider" value="" />
				<property name="keyStoreFile" value="${licensing.ks.file}" />
				<property name="keyStorePassword" value="${licensing.ks.password}" />
				<property name="alias" value="${licensing.cert.alias}" />
				<property name="selfSignedWithMD5" value="${licensing.cert.selfSignedMD5}" />
				<property name="selfSignedWithSHA1" value="${licensing.cert.selfSignedSHA1}" />
				<property name="veriSigned" value="${licensing.cert.veriSigned}" />
			</bean>	
		</constructor-arg>
	</bean>	
	
	<bean id="signPdfService" class="com.sinfic.ipdms.integration.bdo.SignPDF">
		<constructor-arg ref="testKeyStoreFactory" />
		<property name="annotationX" value="250" />
		<property name="annotationY" value="100" />
	</bean>
	
	<bean id="renderPdfXmlTranslator" class="com.sinfic.ipdms.tramitacao.pdf.xml.util.TranslatorHelper">
		<constructor-arg ref="colaboradorExtendedRepository" />
		<constructor-arg ref="roleHistoryRepository" />
		<constructor-arg ref="workflowRepository" />
		<constructor-arg ref="dynamicFormInstanceRepository" />
		<constructor-arg ref="renderDynamicFieldInstanceValueFactory" />
	</bean>
	
	<bean id="commonTransformer" abstract="true">
		<constructor-arg ref="renderPdfXmlTranslator" />
		<property name="substitutions">
			<util:map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="&#x80;" value="&#x20AC;" />
			</util:map>
		</property>
	</bean>
	
	<bean id="baseGeneratePdfFromObjectService" abstract="true">
		<constructor-arg>
			<bean class="com.sinfic.ipdms.io.file.engine.WebappFileEngine" depends-on="directoryUtil">
				<constructor-arg index="0" value="images" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="pdfBarCodeService" />
		<constructor-arg>
			<bean class="com.sinfic.ipdms.integration.bdo.AddImageToPDFImpl" />
		</constructor-arg>
		<constructor-arg ref="signPdfService" />
		<property name="logoFile" value="images/logo/ipdms-pdf.png" />
	</bean>
	
	<bean id="servicoOnlinePdfGeneratorFactory" class="com.sinfic.ipdms.tramitacao.pdf.service.PdfFromServicoOnlineFactory">
		<constructor-arg ref="generatePdfFromServicoOnlineService" />
		<!--
			For specific Variantes of ServicoOnline
			<property name="specific">
				<util:map>
					<entry key="idExternoXpto" value-ref="generatePdfFromServicoOnlineServiceXpto"></entry>
					<entry key="idExternoXpto2" value-ref="generatePdfFromServicoOnlineServiceXpto2"></entry>
			 	</util:map>
			</property>
		 -->
	</bean>
	

	<!-- Service that creates PDF from SoLog -->	
	<bean id="generatePdfFromSoLogService" class="com.sinfic.ipdms.tramitacao.pdf.service.impl.GeneratePdfFromNotificationImpl" parent="baseGeneratePdfFromObjectService">
		<constructor-arg>
			<bean class="com.sinfic.ipdms.tramitacao.pdf.xml.service.impl.GenerateFoXmlForNotificationImpl">
				<constructor-arg ref="defaultFileEngine" />
				<constructor-arg>
					<bean class="com.sinfic.ipdms.tramitacao.pdf.xml.service.impl.CompileToXmlImpl">
						<constructor-arg ref="defaultFileEngine" />
						<constructor-arg>
							<list>
								<bean class="com.sinfic.ipdms.tramitacao.pdf.xml.transformers.SoLogToXmlTransformer" parent="commonTransformer">
									<constructor-arg ref="servicoOnlineRepository" />
								</bean>								
								<bean class="com.sinfic.ipdms.tramitacao.pdf.xml.transformers.SoLogDynamicFormToXmlTransformer" parent="commonTransformer">
									<constructor-arg ref="dynamicFormInstanceRepository" />
								</bean>
							</list>
						</constructor-arg>
						<!--
							To log the XML generated 
							<property name="logXml">true</property>
						 -->
					</bean>
				</constructor-arg>
				<constructor-arg value="WEB-INF/conf/fop-xml/etapa.xsl" />
			</bean>
		</constructor-arg>
		<!--
			Define offsets for qrCode image and algo logo Image 
			<property name="qrCodeOffset"></property>
			<property name="logoOffset"></property>
		 -->
	</bean>

	<bean id="generatePdfFromServicoOnlineService" class="com.sinfic.ipdms.tramitacao.pdf.service.impl.GeneratePdfFromServicoOnlineImpl" parent="baseGeneratePdfFromObjectService">
		<constructor-arg>
			<bean class="com.sinfic.ipdms.tramitacao.pdf.xml.service.impl.GenerateFoXmlForServicoOnlineImpl">
				<constructor-arg ref="defaultFileEngine" />
				<constructor-arg ref="commonServicoOnlineCompileToXml" />
				<constructor-arg ref="commonCompileXslForServicoOnline" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="commonServicoOnlineCompileToXml" class="com.sinfic.ipdms.tramitacao.pdf.xml.service.impl.CompileToXmlImpl">
		<constructor-arg ref="defaultFileEngine" />
		<constructor-arg>
			<list>
				<bean
					class="com.sinfic.ipdms.tramitacao.pdf.xml.transformers.ServicoOnlineToXmlTransformer"
					parent="commonTransformer">
					<constructor-arg ref="servicoOnlineRepository" />
					<constructor-arg ref="soLogRepository" />
				</bean>
				<bean
					class="com.sinfic.ipdms.tramitacao.pdf.xml.transformers.SoDynamicFormToXmlTransformer"
					parent="commonTransformer">
					<constructor-arg ref="dynamicFormInstanceRepository" />
				</bean>
			</list>
		</constructor-arg>
		<!-- To log the XML generated 
			<property name="logXml">true</property>
			
			To add other extensions
			<property name="extensionTransformers">
			<list>
				<bean></bean>
			</list>
		</property> 
		-->
	</bean>

	<bean id="commonCompileXslForServicoOnline"
		class="com.sinfic.ipdms.tramitacao.pdf.xml.service.impl.CompileXslFileImpl">
		<constructor-arg ref="defaultFileEngine" />
		<constructor-arg value="WEB-INF/conf/fop-xml/processo_template.xsl" />
		<constructor-arg value="WEB-INF/conf/fop-xml/common/" />
		<!-- 
			<property name="extensionXslFragments"> 
				WEB-INF/conf/fop-xml/extension1.xsl,WEB-INF/conf/fop-xml/extension2.xsl</list> 
			</property> 
		-->
	</bean>
</beans>