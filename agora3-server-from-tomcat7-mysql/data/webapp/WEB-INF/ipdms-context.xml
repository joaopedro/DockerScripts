<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:util="http://www.springframework.org/schema/util"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
							http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">


	<bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  		<property name="location" value="classpath:conf/ipdmsConfig.properties" />
 	</bean>

	<!-- 
		Workflow Implementation
	 -->

	

	<bean id="workflowService" class="com.sinfic.ipdms.tramitacao.jbpm.WorkflowWrapper" scope="singleton">
		<property name="service" ref="jbpmService"/>
		<property name="colaboradorRepository" ref="colaboradorExtendedRepository"/>
		<property name="processoRepository" ref="processoRepository"/>
		<property name="servicoOnlineRepository" ref="servicoOnlineRepository"/>
		<property name="etapaRepository" ref="etapaRepository"/>
		<property name="soLogRepository" ref="soLogRepository"/>
		<property name="varianteRepository" ref="varianteRepository"/>
		<property name="tipoMovimentoRepository" ref="tipoMovimentoRepository"/>
        <property name="dynamicFormInstanceRepository" ref="dynamicFormInstanceRepository"/>
    </bean> 
    <bean id="workflowRepository" class="com.sinfic.ipdms.tramitacao.jbpm.WorkflowRepository" scope="singleton">
		<property name="service" ref="jbpmService"/>
		<property name="colaboradorRepository" ref="colaboradorExtendedRepository"/>
		<property name="gestaoAusenciasRepository" ref="gestaoAusenciasRepository"/>
		<property name="servicoOnlineRepository" ref="servicoOnlineRepository"/>
		<property name="etapaRepository" ref="etapaRepository"/>
		<property name="processoRepository" ref="processoRepository"/>		
    </bean>	
	
	<!-- 
		Oracle workflow Implementation
		If has a constructor that receives 2 argumens:
		a) The workflow schema name
		b) A WorkflowContextFactory to createDTO workflow context instances
	 -->
	<!--  
	<bean id="workflowEngine" class="com.sinfic.ipdms.tramitacao.oracle.WorkflowWrapper" scope="singleton">
		<constructor-arg value="ipdms_oraclewf_schema_name" />
		<constructor-arg>
			<bean class="com.sinfic.ipdms.tramitacao.oracle.WorkflowContextCreator" />
		</constructor-arg>
	</bean>
	-->	
    <bean id="reportLoader" class="com.sinfic.ipdms.integration.birt.utility.BirtUtil"/>
    <bean id="reportProcessor" class="com.sinfic.ipdms.analise.relatorio.BIRT"/>
	<bean id="birtProperties" class="com.sinfic.ipdms.analise.util.BirtProperties" scope="singleton">
		<property name="reportEngineDir" value="${birtProperties.reportEngineDir}" />
	</bean>
   
	<bean id="bEIProperties" class="com.sinfic.ipdms.bei.util.BEIProperties" scope="singleton">
		<property name="uiDescriptionLocation" value="${bei.ui.definition}" />
	</bean>
	
	<bean id="daemonProperties" class="com.sinfic.ipdms.daemon.DaemonProperties" scope="singleton">
		<property name="login" value="super" />
		<property name="password" value="" />
		<property name="codigoUtilizador" value="0" />
		<property name="codigoEmpresa" value="18729" />
		<property name="userByPass" value="bypass" />
	</bean>

    <bean id="webProperties" class="com.sinfic.ipdms.utils.WebProperties" scope="singleton">
    <property name="login" value="super" />
    <property name="password" value="" />
    <property name="codigoUtilizador" value="0" />
    <property name="codigoEmpresa" value="18729" />
    <property name="userByPass" value="" />
    </bean>

    <!--Isto foi comentado porque o bean teve de ir para o modulo WSDL.presentation-->
	<!--<bean id="webServicesProperties" class="com.sinfic.ipdms.mobile.utils.WebServicesProperties" scope="singleton">-->
		<!--<property name="login" value="super" />-->
		<!--<property name="password" value="" />-->
		<!--<property name="codigoUtilizador" value="0" />-->
		<!--<property name="codigoEmpresa" value="18729" />-->
		<!--<property name="userByPass" value="" />-->
	<!--</bean>-->
	
	<bean id="driverToFlowTranslator" class="com.sinfic.ipdms.domain.util.DriverToFlowBeanTranslator" scope="singleton">
		<property name="translate" ref="driverToFlowTranslate"/>
	</bean>	
	
	<util:map id="driverToFlowTranslate" key-type="java.lang.Class">
<!-- 		<entry key="com.sinfic.ipdms.example.domain.driver.TesteDriver" value-ref="testeFormAction" />				 -->
		<entry key="com.sinfic.ipdms.gestaoausencias.domain.driver.GestaoAusenciasDriver" value-ref="gestaoAusenciasFormAction" />
		<entry key="com.sinfic.ipdms.domain.driver.DynamicDriver" value-ref="dynamicFormAction" />
<!-- 		<entry key="com.sinfic.ipdms.template.domain.driver.TemplateDriver" value-ref="templateFormAction" /> -->
		<!-- entry key="com.sinfic.ipdms.formacao.domain.driver.FormacaoTestDriver" value-ref="formacaoTestFormAction" /-->
		<!--entry key="com.sinfic.ipdms.formacao.domain.driver.PessoaDriver" value-ref="pessoaFormAction" /-->					
	</util:map>
	
	
	<!-- Numero Unico de Entrada -->
	<bean id="numeroUnicoEntradaDocumentoSequencerBean"
		class="com.sinfic.ipdms.domain.business.numerounico.OracleNumeroUnicoSequencer"
		init-method="init">
		<property name="incrementer" ref="numeroUnicoEntradaOracleIncrementeBean" />
	</bean>
	<bean id="numeroUnicoEntradaOracleIncrementeBean"
		class="org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer">
		<constructor-arg ref="dataSource" />
		<constructor-arg value="numerounicoentrada_seq" />
	</bean>
	<!-- Numero Unico de Saida -->
	<bean id="numeroUnicoSaidaDocumentoSequencerBean"
		class="com.sinfic.ipdms.domain.business.numerounico.OracleNumeroUnicoSequencer"
		init-method="init">
		<property name="incrementer" ref="numeroUnicoSaidaOracleIncrementeBean" />
	</bean>	
	<bean id="numeroUnicoSaidaOracleIncrementeBean"
		class="org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer">
		<constructor-arg ref="dataSource" />
		<constructor-arg value="numerounicosaida_seq" />
	</bean>
	
	<bean id="tipoConteudoMapper" class="java.util.HashMap">
		<constructor-arg>
			<map key-type="java.lang.Class" value-type="java.lang.String">
				<entry key="com.sinfic.ipdms.domain.entity.ColaboradorInfo" value="COLABORADO" />
				<entry key="com.sinfic.ipdms.domain.entity.Etapa" value="TCNO" />
				<entry key="com.sinfic.ipdms.domain.entity.Processo" value="TCPROC" />
				<entry key="com.sinfic.ipdms.domain.entity.Variante" value="CODTIPOCON" />
				<entry key="com.sinfic.ipdms.domain.entity.documento.DocumentoAnexadoTramitacao" value="TC_DOCUMEN" />
				<entry key="com.sinfic.ipdms.domain.entity.documento.DocumentoAnexadoInstrucao" value="TC_DOCUMEN" />
				<entry key="com.sinfic.ipdms.domain.entity.documento.DocumentoTemplate" value="TC_DOCUMEN" />
				<entry key="com.sinfic.ipdms.domain.entity.documento.DocumentoTemplateInstrucao" value="TC_DOCUMEN" />
				<entry key="com.sinfic.ipdms.domain.entity.documento.DocumentoAssociadoInstrucao" value="TC_DOCUMEN" />
				<entry key="com.sinfic.ipdms.modules.dimensoes.domain.Dimensao" value="TC_DIMENSAO" />
				<entry key="com.sinfic.ipdms.modules.dimensoes.domain.NivelDimensional" value="TC_NIVELDIM" />
				<entry key="com.sinfic.ipdms.modules.dimensoes.domain.ValorDimensional" value="TC_VALORDIM" />
				<entry key="com.sinfic.ipdms.modules.dimensoes.domain.NivelDimensional" value="TC_NIVELDIM" />
			</map>
		</constructor-arg>
	</bean>	
	
	<bean id="convertServiceToXml" class="com.sinfic.ipdms.services.export.impl.ConvertServiceToXmlImpl">
        <constructor-arg>
            <bean class="com.sinfic.ipdms.services.export.xstream.ProcessoDTOConverter" />
        </constructor-arg>
    </bean>

	<!-- Declared to spring inject applicationcontext -->
	<bean id="contextApplicationContextProvider" class="com.sinfic.ipdms.integration.spring.ApplicationContextProvider" />

	<!-- Document Filler Beans -->
	<!--
	<bean id="documentFillerPattern" class="java.util.regex.Pattern">
		<constructor-arg value="(\[)(\[)ipdms(\:)(\w+\.)*(\w+)(\.\w+)*(\])(\])" />
		<constructor-arg value="0" />
	</bean>-->
	
	<bean id="documentFillerFactory" class="com.sinfic.ipdms.comum.document.filler.DocumentFillerFactory" scope="singleton">
		<constructor-arg>
			<list>
				<ref bean="pojoPatternExtractor"/>
				<ref bean="latestLabelPatternExtractor"/>
				<ref bean="byEtapaPatternExtractor"/>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="pojoPatternExtractor" class="com.sinfic.ipdms.comum.document.filler.patternextractor.PojoPatternExtractor">
		<constructor-arg>
			<bean class="java.util.regex.Pattern">
				<constructor-arg value="(\[)(\[)ipdms(\:)(\w+\.)*(\w+)(\.\w+)*(\])(\])" />
				<constructor-arg value="0" />
			</bean>
		</constructor-arg>
		<constructor-arg value="[[ipdms:" />
		<constructor-arg value="]]" />
	</bean>

	<bean id="latestLabelPatternExtractor" class="com.sinfic.ipdms.comum.document.filler.patternextractor.LatestDynamicFieldPatternExtractor">
		<constructor-arg>
			<bean class="java.util.regex.Pattern">
				<constructor-arg value="(\[)(\[)ipdmsatr(\:)(\w+)+(\])(\])" />
				<constructor-arg value="0" />
			</bean>
		</constructor-arg>
		<constructor-arg value="[[ipdmsatr:" />
		<constructor-arg value="]]" />
	</bean>

	<bean id="byEtapaPatternExtractor" class="com.sinfic.ipdms.comum.document.filler.patternextractor.DynamicFieldByEtapaPatternExtractor">
		<constructor-arg>
			<bean class="java.util.regex.Pattern">
				<constructor-arg value="(\[)(\[)ipdmsatr(\:)(\w+):(\w+)(\])(\])" />
				<constructor-arg value="0" />
			</bean>
		</constructor-arg>
		<constructor-arg value="[[ipdmsatr:" />
		<constructor-arg value="]]" />
	</bean>
	<!-- END: Document Filler Beans -->

	<bean id="productInfoLogoMapper" class="com.sinfic.ipdms.utils.productinfo.ProductLogoMapper" scope="singleton">
		<constructor-arg value="images/logo/logo-ipdms01.gif" />
		<property name="mappingLogos">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="IPDMS Core" value="images/logo/IPDMS.png" />
			</map>
		</property>
	</bean>
	
	<bean id="pdfConverter" class="com.sinfic.ipdms.integration.jodconverter.PDFConverter">
		<constructor-arg value="127.0.0.1" />
		<constructor-arg value="8100" />
        <property name="toPdfA" value="false" />
        <property name="forceExport" value="false" />
	</bean>	

	
	<!-- Definicao de geradores de numeros de documento -->
	<bean id="genericNumeroDocumentoGenerator" class="com.sinfic.ipdms.domain.business.documento.impl.GenericNumeroDocumentoGenerator">
		<constructor-arg value="general_docs" />
	</bean>
	
	<bean id="docTemplateNumeroDocumentoGenerator" class="com.sinfic.ipdms.domain.business.documento.impl.DocumentoTemplateNumeroGenerator">
		<constructor-arg value="template_docs" />
	</bean>
	
	<!-- Mail Config -->
	<bean abstract="true" id="abstractMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.host">${mail.host}</prop>
				<prop key="mail.smtp.auth">${mail.host.auth}</prop>
                <!--May be necessary. i.e. for gmail-->
                <!--<prop key="mail.smtp.port">${mail.smtp.port}</prop>-->
                <!--<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>-->
                <!--<prop key="mail.smtp.starttls.required">${mail.smtp.starttls.required}</prop>-->
            </props>
		</property>
		<property name="username" value="${mail.host.user}" />
		<property name="password" value="${mail.host.pass}" />
		<property name="defaultEncoding" value="${mail.default.encoding}" />
	</bean>	
	
	<bean id="defaultMailSender" parent="abstractMailSender">
		<property name="javaMailProperties">
			<props merge="true">
				<prop key="mail.from">${ipdms.mail.from}</prop>
			</props>
		</property>
	</bean>
	
	<bean id="guichetMailSender" parent="abstractMailSender">
		<property name="javaMailProperties">
			<props merge="true">
				<prop key="mail.from">${guichet.mail.from}</prop>
			</props>
		</property>
	</bean>
	
		<!-- Entidade Util -->
	<bean id="entidadeUtil" class="com.sinfic.ipdms.modules.entidade.util.EntidadeUtil">
		<property name="extendedSingular" value="true"/>
	</bean>
	<bean id="entidadeTransformer" class="com.sinfic.ipdms.modules.entidade.util.EntidadeTransformer">
		<constructor-arg ref="entidadeUtil"/>
	</bean>
	
	<!-- i18n -->
	<bean id="ipdmsLocale" class="java.util.Locale">
		<constructor-arg value="${ipdms.language}"/>
	</bean>
	
	<bean id="i18nService" class="com.sinfic.ipdms.utils.i18n.I18nService" scope="singleton">
		<property name="locale" ref="ipdmsLocale"/>
		<property name="sessionKeys">
			<list>
				<value>javax.servlet.jsp.jstl.fmt.locale.session</value>
				<value>org.apache.struts.action.LOCALE</value>
				<value>locale</value>
			</list>
		</property>
	</bean>
	
 	<bean id="resourceBundleControl" class="com.sinfic.ipdms.utils.IPDMSResourceBundleControl" scope="singleton"/>
	
	<bean id="resourceBundle" class="com.sinfic.ipdms.utils.IPDMSResourceBundleWrapper" scope="singleton" >
		<constructor-arg value="resources.IPDMSResources"/>
		<constructor-arg type="java.util.Locale" ref="ipdmsLocale"/>
		<constructor-arg type="java.util.ResourceBundle$Control" ref="resourceBundleControl"/>
	</bean> 

     <!-- Integração Esri -->
<!--      <bean id="esriConnector" class="com.sinfic.ipdms.integration.esri.service.impl.EsriService" scope="singleton"> -->
<!--          <constructor-arg value="${ipdms.esri.guid}"/>  -->
<!-- 		 <constructor-arg type="java.net.URL" value="${ipdms.esri.service.url}"/> -->
<!--          <constructor-arg value="${ipdms.esri.web.url}"/>  -->
<!-- 		 <constructor-arg value="${ipdms.esri.fieldName}"/>  -->
<!-- 		 <constructor-arg value="${ipdms.esri.numeracao}"/>  -->
<!-- 		 <constructor-arg value="${ipdms.esri.varianteName}"/>  -->
<!-- 		 <constructor-arg value="${ipdms.esri.designacaoVarianteName}"/>  -->
<!-- 		 <constructor-arg value="${ipdms.esri.numeroProcesso}"/>  -->
<!-- 	 </bean>	 -->

	<!-- BEGIN: Import users from ldap service -->

<!-- 	<bean id="contextSource" class="org.springframework.ldap.core.support.LdapContextSource"> -->
<!--       <property name="url" value="${ldap.server}" /> -->
<!--       <property name="base" value="${ldap.base}" /> -->
<!--       <property name="userDn" value="${ldap.adminlogin}" /> -->
<!--       <property name="password" value="${ldap.adminpass}" /> -->
<!--       <property name="baseEnvironmentProperties"> -->
<!-- 		<map> -->
<!-- 			<entry key="java.naming.ldap.attributes.binary" value="objectGUID"/> -->
<!-- 		</map>	 -->
<!-- 	</property> -->
<!--    </bean> -->
   
<!-- 	<bean id="ldapUsersService" class="com.sinfic.ipdms.integration.spring.ldap.LDAPUsersService"> -->
<!-- 		<constructor-arg index="0"> -->
<!-- 			<bean class="org.springframework.ldap.core.LdapTemplate"> -->
<!-- 				<constructor-arg ref="contextSource" /> -->
<!-- 				<property name="ignorePartialResultException" value="true" /> -->
<!-- 			</bean> -->
<!-- 		</constructor-arg> -->
<!-- 		<constructor-arg index="1" value="CN=Users" /> -->
<!-- 		<constructor-arg index="2" value="(objectclass=person)" /> -->
<!-- 		<constructor-arg index="3"> -->
<!-- 			<bean class="com.sinfic.ipdms.integration.spring.ldap.ActiveDirectoryAttributesMapper" /> -->
<!-- 		</constructor-arg> -->
<!-- 	</bean> -->
	<!-- END: Import users from ldap service -->
	
	<bean id="ipdmsSessionContextBean" class="com.sinfic.ipdms.integration.kcms.IpdmsSessionContext" />

</beans>